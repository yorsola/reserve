package ${package.Controller};

import org.springframework.web.bind.annotation.*;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import ${package.Service}.${table.serviceName};
import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import ${package.Entity}.${entity}Entity;
import javax.validation.Valid;
import com.cr.idoctor.common.base.BasePageRequest;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.cr.idoctor.common.utils.PageUtils;
import com.cr.idoctor.common.base.BaseMsg;
import com.cr.idoctor.common.base.BasePageDataDTO;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags="${table.comment}类")
@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

	private static final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);
	
	@Autowired
	private ${table.serviceName} ${table.entityPath}Service;
	
	@ApiOperation(value = "获取列表")
	@PostMapping("/list")
	public BaseMsg list(@RequestBody @Valid BasePageRequest<Object> request) {
		
		${entity}Entity entity=new ${entity}Entity();

		QueryWrapper<${entity}Entity> wrapper = new QueryWrapper<${entity}Entity>(entity);
		IPage<${entity}Entity> currentPage = PageUtils.buildPage(request);
		IPage<${entity}Entity> selectPage = ${table.entityPath}Service.page(currentPage, wrapper);
        BasePageDataDTO<${entity}Entity> dto = new BasePageDataDTO<${entity}Entity>(selectPage.getRecords(), selectPage.getTotal());
		return BaseMsg.success(dto);
	}
	
	@ApiOperation(value = "根据id获取信息")
	@GetMapping
	public BaseMsg getInfo(@RequestParam @ApiParam(name = "id", value = "id", required = true) long id) {
		${entity}Entity entity = ${table.entityPath}Service.getById(id);
		return BaseMsg.success(entity);
	}
	
	@ApiOperation(value = "根据id删除信息")
	@DeleteMapping
	public BaseMsg del(@RequestParam @ApiParam(name = "id", value = "id", required = true) long id) {
		if(${table.entityPath}Service.removeById(id))
			return BaseMsg.success("删除成功");
		return BaseMsg.failed("删除失败");
	}
	
	@ApiOperation(value = "新增信息")
	@PostMapping
	public BaseMsg save(${entity}Entity entity) {
	
		if (${table.entityPath}Service.save(entity))
			return BaseMsg.success("保存成功");
		return BaseMsg.failed("保存失败");
	}

	@ApiOperation(value = "修改信息")
	@PutMapping
	public BaseMsg update(${entity}Entity entity) {

		if (${table.entityPath}Service.updateById(entity))
			return BaseMsg.success("保存成功");
		return BaseMsg.failed("保存失败");
	}
	
	
}
